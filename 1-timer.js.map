{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nconst datePickBtn = document.querySelector('button');\nconst dateInput = document.querySelector('input');\nconst days = document.querySelector('span[data-days]');\nconst hours = document.querySelector('span[data-hours]');\nconst minutes = document.querySelector('span[data-minutes]');\nconst seconds = document.querySelector('span[data-seconds]');\n\nlet userSelectedDate = null;\ndatePickBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() <= options.defaultDate.getTime()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#ffffff',\n        messageSize: '16px',\n        backgroundColor: '#ef4040',\n        position: 'topRight',\n        progressBarColor: '#b51b1b',\n        close: false,\n      });\n      datePickBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDates[0];\n      datePickBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nlet intervalId = null;\n\nfunction start() {\n  intervalId = setInterval(() => {\n    const ms = userSelectedDate - Date.now();\n\n    if (ms <= 0) {\n      stop();\n      return;\n    }\n\n    days.textContent = addLeadingZero(convertMs(ms).days);\n    hours.textContent = addLeadingZero(convertMs(ms).hours);\n    minutes.textContent = addLeadingZero(convertMs(ms).minutes);\n    seconds.textContent = addLeadingZero(convertMs(ms).seconds);\n  }, 1000);\n\n  datePickBtn.disabled = true;\n  dateInput.disabled = true;\n}\n\nfunction stop() {\n  clearInterval(intervalId);\n  dateInput.disabled = false;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\ndatePickBtn.addEventListener('click', start);\n"],"names":["datePickBtn","dateInput","days","hours","minutes","seconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","intervalId","start","ms","stop","addLeadingZero","convertMs","value"],"mappings":"0IAGA,MAAMA,EAAc,SAAS,cAAc,QAAQ,EAC7CC,EAAY,SAAS,cAAc,OAAO,EAC1CC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EAAmB,KACvBN,EAAY,SAAW,GAEvB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAS,GAAID,EAAQ,YAAY,WACpDE,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,YAAa,OACb,gBAAiB,UACjB,SAAU,WACV,iBAAkB,UAClB,MAAO,EACf,CAAO,EACDT,EAAY,SAAW,KAEvBM,EAAmBE,EAAc,CAAC,EAClCR,EAAY,SAAW,GAE1B,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EAErC,IAAII,EAAa,KAEjB,SAASC,GAAQ,CACfD,EAAa,YAAY,IAAM,CAC7B,MAAME,EAAKP,EAAmB,KAAK,IAAG,EAEtC,GAAIO,GAAM,EAAG,CACXC,IACA,MACD,CAEDZ,EAAK,YAAca,EAAeC,EAAUH,CAAE,EAAE,IAAI,EACpDV,EAAM,YAAcY,EAAeC,EAAUH,CAAE,EAAE,KAAK,EACtDT,EAAQ,YAAcW,EAAeC,EAAUH,CAAE,EAAE,OAAO,EAC1DR,EAAQ,YAAcU,EAAeC,EAAUH,CAAE,EAAE,OAAO,CAC3D,EAAE,GAAI,EAEPb,EAAY,SAAW,GACvBC,EAAU,SAAW,EACvB,CAEA,SAASa,GAAO,CACd,cAAcH,CAAU,EACxBV,EAAU,SAAW,EACvB,CAEA,SAASe,EAAUH,EAAI,CAMrB,MAAMX,EAAO,KAAK,MAAMW,EAAK,KAAG,EAC1BV,EAAQ,KAAK,MAAOU,EAAK,MAAO,IAAI,EACpCT,EAAU,KAAK,MAAQS,EAAK,MAAO,KAAQ,GAAM,EACjDR,EAAU,KAAK,MAASQ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASU,EAAeE,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAjB,EAAY,iBAAiB,QAASY,CAAK"}